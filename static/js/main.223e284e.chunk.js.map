{"version":3,"sources":["wrappers/Nav.js","wrappers/Search.js","wrappers/Header.js","content/pages/recipes/NewRecipe.js","content/pages/recipes/EditRecipe.js","content/pages/recipes/FavoriteButton.js","content/pages/recipes/EditDelRecipeBtn.js","content/pages/recipes/ShowRecipe.js","content/components/Thumbnail.js","content/pages/recipes/Recipes.js","content/pages/profile/EditProfile.js","content/components/Bio.js","content/pages/profile/Profile.js","content/pages/authors/AuthorThumbnail.js","content/pages/authors/Authors.js","content/pages/authors/ShowAuthor.js","content/pages/auth/Login.js","content/pages/auth/Signup.js","content/Content.js","wrappers/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","links","className","to","user","name","onClick","e","preventDefault","localStorage","removeItem","updateUser","href","target","rel","Search","useState","setError","formInput","setFormInput","type","axios","get","process","then","response","data","message","console","log","err","setSearchedRecipes","catch","alt","placeholder","onChange","value","required","Header","searchedRecipes","NewRecipe","setMessage","redirect","setRedirect","title","setTitle","setAlt","image","setImage","servings","setServings","description","setDescription","directions","setDirections","ingredients","setIngredients","tags","setTags","chars","setChars","useEffect","onSubmit","fetch","method","body","JSON","stringify","userId","_id","headers","getItem","ok","status","statusText","length","EditRecipe","recipe","descriptions","recipe_id","FavoriteButton","favorite","setFavorite","checkFave","favRecipes","find","recipeId","post","EditDelRecipeBtn","buttons","authorId","path","render","delete","ShowRecipe","id","useParams","setRecipe","author","setAuthor","recipeStyle","backgroundImage","res2","ingredientList","map","ingred","index","key","step","tagList","tag","recipeDetails","class","style","Thumbnail","thumbStyle","authorLink","Recipes","topTwenty","setTopTwenty","searchedRecipesLinkList","searchedRecipe","j","topTwentyLinkList","i","outputList","EditProfile","setName","email","setEmail","password","setPassword","bio","setBio","user_id","json","result","token","Bio","bioStyle","Profile","userRecipes","setUserRecipes","userFaves","setUserFaves","recipeLinkList","isAuthor","favesLinkList","AuthorThumbnail","authorStyle","numRecipes","Authors","authors","setAuthors","filter","authorLinkList","ShowAuthor","authorRecipes","setAuthorRecipes","Login","toString","Signup","Content","exact","component","Footer","App","setUser","decodeToken","newToken","setItem","existingToken","decoded","jwtDecode","Date","now","exp","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.223e284e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nexport default function Nav(props) {\n    const handleLogout = e => {\n        e.preventDefault()\n        // Remove the token from localstorage\n        localStorage.removeItem('mernToken')\n        // TODO: Update the state of the App\n        props.updateUser();\n        return(<Redirect to=\"/auth/login\" />)\n    }\n    // links that show when user is not logged in\n    let links = (\n        <span>\n            <li className=\"App-nav-link\">\n                <Link to=\"/auth/login\" className=\"App-link\">Login</Link>\n            </li>\n            <li className=\"App-nav-link\">\n                <Link to=\"/auth/signup\" className=\"App-link\">Sign up</Link>\n            </li>\n        </span>\n    )\n\n    // links that show when user is logged in\n    if (props.user) {\n        links = (\n          <span>\n            <li className=\"fancy\">Hello {props.user.name}!</li>\n            <li className=\"App-nav-link\"> \n              <Link to=\"/profile\" className=\"App-link\">Profile</Link>\n            </li>\n            <li className=\"App-nav-link\">\n              <Link to=\"/\" onClick={handleLogout} className=\"App-link\">Log out</Link>\n            </li>\n          </span>\n        )\n    }\n\n    return(\n        <nav>\n            <ul className=\"App-nav\">\n                {links}\n                <li className=\"App-nav-link\">\n                    <Link to=\"/authors\" className=\"App-link\">Authors</Link>\n                </li>\n                <li className=\"App-nav-link\">\n                    <a href=\"https://github.com/erik-hei/recipe-app-project3\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"App-link\">About</a>\n                </li>\n            </ul>\n        </nav>\n    )\n}","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Redirect, Link } from \"react-router-dom\";\n\nexport default function Search(props) {\n    const [error, setError] = useState(null);\n    const [formInput, setFormInput] = useState(\"\");\n    \n    const handleSubmit = e => {\n        // e.preventDefault();\n        axios.get(`${process.env.REACT_APP_SERVER_URL}/recipes?tags=${formInput}`)\n        .then(response => {\n            if (response.data.message) {\n                console.log(response.data.err);\n                setError(response.data.message);\n            } else {\n                console.log(formInput)\n                props.setSearchedRecipes(response.data);\n                // return <Redirect to=\"/recipes\" />\n            }\n        }).catch(err => {\n            console.log(err);\n          })\n    }\n    \n    return (\n        <div className=\"App-search\">\n            {/* <form onSubmit={e => handleSubmit(e)}> */}\n            <form>\n                <label className=\"search-label\">Type in keywords to discover new recipes!</label>\n                <button className=\"search-button\" type=\"submit\">\n                    <Link onClick={e => handleSubmit(e)} to=\"/recipes\" alt=\"Search\">🔍</Link>\n                    {/* 🔍 */}\n                </button>\n                <input type=\"text\" className=\"search-field\" placeholder=\"Type in keywords to discover new recipes!\" name=\"search\" onChange={e => setFormInput(e.target.value)} required />\n            </form>\n        </div>\n    )\n}\n\n//put into recipes so instead of header, call search at top of recipes\n//orrrr put it in content\n","import React from 'react';\nimport Nav from './Nav';\nimport Search from './Search'\nimport { Link } from 'react-router-dom';\n\nexport default function Header(props) {\n    return (\n        <header className=\"App-header white-bg\">\n            <div>\n                <Link to=\"/\" className=\"App-link\">\n                    {/* <img src=\"/img/spaghetti.jpg\" alt=\"spaghetti-logo\" /> */}\n                    <h1 className=\"fancy\">NoScroll <span className=\"italic\">Recipes</span></h1>\n                </Link>\n                <div className=\"red-line\"></div>\n                <div className=\"orange-line\"></div>\n            </div>\n            <div className=\"Nav-links\">\n                <Nav className=\"white-bg\" updateUser={props.updateUser} user={props.user} />\n                <Search setSearchedRecipes={props.setSearchedRecipes} searchedRecipes={props.searchedRecipes} />\n            </div>\n        </header>\n    )\n}","// Packages\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function NewRecipe(props) {\n  // Declare and initialize state variables\n  let [newRecipe, setNewRecipe] = useState({});\n  let [message, setMessage] = useState(\"\");\n  let [redirect, setRedirect] = useState(\"\");\n  let [title, setTitle] = useState('');\n  let [alt, setAlt] = useState('');\n  let [image, setImage] = useState('');\n  let [servings, setServings] = useState(0);\n\n  let [description, setDescription] = useState(\"\");\n  let [directions, setDirections] = useState(\"\");\n  let [ingredients, setIngredients] = useState(\"\");\n  let [tags, setTags] = useState(\"\");\n  let [chars, setChars] = useState(280);\n\n  useEffect(()=> {\n\n    setMessage(\"\");\n  }, [title, alt, image, servings, directions, ingredients, tags])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    // TODO: Send the user sign up data to the server\n    fetch(`${process.env.REACT_APP_SERVER_URL}/recipes/`, {\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n        alt,\n        userId: props.user._id,\n        image,\n        servings,\n        description,\n        directions,\n        ingredients,\n        tags\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"mernToken\")}`\n      }\n    }).then(response => {\n        if (!response.ok) {\n            console.log(response);\n            setMessage(`${response.status}: ${response.statusText}`);\n            return;\n        } else {\n            setRedirect(<Redirect to={`/`} />)\n        }\n    })\n  }\n\n  if (!props.user) {\n    return <Redirect to=\"/auth/login\" />\n  }\n\n\n  return (\n    <div className=\"form-background\">\n      <h2 className=\"form-title\">New Recipe</h2>\n      <span className=\"red\">{message}</span>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Title:</label>\n          <input type=\"text\" name=\"title\" onChange={e => setTitle(e.target.value)} />\n        </div>\n        <div>\n          <label>Alt tag:</label>\n          <input type=\"text\" name=\"alt\" onChange={e => setAlt(e.target.value)} />\n        </div>\n        <div>\n          <label>Image url:</label>\n          <input type=\"url\" name=\"image\" onChange={e => setImage(e.target.value)} />\n        </div>\n        <div>\n          <label>Servings:</label>\n          <input type=\"number\" name=\"servings\" onChange={e => setServings(e.target.value)} />\n        </div>\n        <div>\n          <label>Description: ({chars} character{chars===1?'':'s'} remaining)</label>\n          <input type=\"text\" name=\"description\" placeholder=\"Describe your recipe\" onChange={(e) => {\n            setDescription(e.target.value);\n            setChars(280 - e.target.value.length);\n          }} />\n        </div>\n        <div>\n          <label>Directions:</label>\n          <input type=\"text\" name=\"directions\" placeholder=\"Comma-separate your list of directions...\" onChange={e => setDirections(e.target.value)} />\n        </div>\n        <div>\n          <label>Ingredients:</label>\n          <input type=\"text\" name=\"ingredients\" placeholder=\"Comma-separate your list of ingredients...\" onChange={e => setIngredients(e.target.value)} />\n        </div>\n        <div>\n          <label>Tags:</label>\n          <input type=\"text\" name=\"tags\" placeholder=\"Comma-separate your list of tags, the more the better!\" onChange={e => setTags(e.target.value)} />\n        </div>\n        <button className=\"form-button\" type=\"submit\">Create Recipe!</button>\n      </form>\n      {redirect}\n    </div>\n\n  )\n}","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function EditRecipe(props) {\n    // Declare and initialize state variables\n    let [title, setTitle] = useState(props.recipe.title)\n    let [alt, setAlt] = useState(props.recipe.alt)\n    let [image, setImage] = useState(props.recipe.image)\n    let [servings, setServings] = useState(props.recipe.servings)\n    let [description, setDescription] = useState(props.recipe.description)\n    let [directions, setDirections] = useState([props.recipe.directions]);\n    let [ingredients, setIngredients] = useState([props.recipe.ingredients])\n    let [tags, setTags] = useState([props.recipe.tags])\n    let [message, setMessage] = useState('')\n\n    useEffect(() => {\n        setMessage(\"\");\n    }, [title, alt, image, servings, description, directions, ingredients, tags])\n    \n\n    if (!props.user) {\n        return <Redirect to='/' />\n    }\n    \n    const handleSubmit = e => {\n        console.log(\"Here are your changes:\", title, alt, image, description, directions, ingredients, tags)\n        console.log(\"Here is what you had before:\", props.recipe.title, props.recipe.alt, props.recipe.image, props.recipe.descriptions, [props.recipe.directions], [props.recipe.ingredients], [props.recipe.tags])\n        e.preventDefault()\n        // TODO: Send the user's edited data to the server\n        fetch(`${process.env.REACT_APP_SERVER_URL}/recipes/${props.recipe_id}/edit`, {\n            method: 'POST',\n            body: JSON.stringify({\n                title,\n                alt,\n                image,\n                servings,\n                description,\n                directions,\n                ingredients,\n                tags\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem(\"mernToken\")}`\n\n            }\n            }).then(response => {\n            if (!response.ok) {\n                console.log(response);\n                setMessage(`${response.status}: ${response.statusText}`);\n                return;\n            }\n\n            \n        })\n    }\n\n\n    return (\n        <div className=\"form-background\">\n            <h2 className=\"form-title\">Edit Recipe</h2>\n            <span className=\"red\">{message}</span>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Title:</label>\n                    <input type=\"text\" name=\"title\" placeholder={props.recipe.title} \n                        onChange={e => setTitle(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Alt Tag:</label>\n                    <input type=\"text\" name=\"alt\" placeholder={props.recipe.alt} \n                        onChange={e => setAlt(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Image URL:</label>\n                    <input type=\"url\" name=\"image\" placeholder={props.recipe.image} \n                        onChange={e => setImage(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Servings:</label>\n                    <input type=\"number\" name=\"servings\" placeholder={props.recipe.servings} \n                        onChange={e => setServings(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Decription:</label>\n                    <input type=\"text\" name=\"description\" placeholder={props.recipe.description} \n                        onChange={e => setDescription(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Ingredients:</label>\n                    <input type=\"text\" name=\"ingredients\" placeholder={props.recipe.ingredients} \n                        onChange={e => setIngredients(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Tags:</label>\n                    <input type=\"text\" name=\"tags\" placeholder={props.recipe.tags} \n                        onChange={e => setTags(e.target.value)} \n                    />\n                </div>\n                <button className=\"form-button\" type=\"submit\">Update</button>\n            </form>\n      </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function FavoriteButton(props) {\n    let [favorite, setFavorite] = useState(\"\");\n    let [error, setError] = useState(null);\n\n    // useEffect(() => {\n    //     if (props.user) {\n    //         axios.get(`${process.env.REACT_APP_SERVER_URL}/authors/${props.user._id}`)\n    //         .then(response => {\n    //             console.log(\"💩💩\")\n    //             if (response.data.message) {\n    //                 setError(response.data.message);\n    //                 console.log(\"💥\", response.data.err);\n    //             } else {\n    //                 console.log(\"response.data:\", response.data)\n    //                 setFavorite(props.recipeId);\n    //                 response.data.favRecipes.forEach(recipe => {\n    //                     console.log(\"🤠\")\n    //                     console.log(recipe._id)\n    //                     // console.log(recipe)\n    //                     console.log(\"😈\")\n    //                     console.log(props.recipeId)\n    //                     // console.log(props)\n    //                     if (recipe._id === props.recipeId) {\n    //                         setFavorite(\"\");\n    //                     }\n    //                 })\n    //             }\n    //         }).catch(err => {\n    //             setError(err);\n    //             console.log(err);\n    //         })\n    //     }\n    // }, []);\n\n    useEffect(() => {\n        let checkFave = props.user.favRecipes.find(recipe => recipe === props.recipeId)\n        console.log(checkFave + \"👾\")\n        setFavorite(checkFave ? true : false);\n    })\n\n    let handleSubmit = () => {\n        console.log(\"😿\")\n        axios.post(`${process.env.REACT_APP_SERVER_URL}/profile/addFav`, {\n            recipeId: props.recipeId,\n            userId: props.user._id\n        })\n        .then(response => {\n            setFavorite(props.recipeId);\n            // return (<p>Added to favorites!</p>);\n        }).catch(err => {\n            console.log(\"🎃\")\n            console.log(err);\n        })\n    }\n\n    // let favoriteButton = !favorite ? <button onClick={handleSubmit}>Add to Favorites</button> : <p>Recipe in Favorites!</p>;\n    return (\n        !favorite ? <button onClick={handleSubmit}>Add to Favorites</button> : <p>Recipe in Favorites!</p>\n        //!favorite ? \n    )\n}\n\n","import React, { useState } from 'react';\nimport axios from \"axios\";\nimport { Route } from 'react-router-dom';\nimport EditRecipe from './EditRecipe'\n\nexport default function EditDelRecipeBtn(props) {\n    let buttons = \"\";\n    const [error, setError] = useState(null);\n    const handleDelete = e => {\n        axios.delete(`${process.env.REACT_APP_SERVER_URL}/recipes/${props.recipe._id}`)\n        .then(response => {\n            if (response.data.message) {\n                console.log(\"💥\", response.data.err);\n            } else {\n                // if successfully deleted, redirect to /recipes\n            }\n        }).catch(err => {\n            setError(err);\n            console.log(err);\n        });\n    }\n\n    const handleEditClick = (e) => {\n        editButton = (<Route path={`/recipes/${props.recipe._id}/edit`} render={() => <EditRecipe user={props.user} recipe={props.recipe} />} />);\n    }\n    \n    let editButton = (<button onClick={handleEditClick}>Edit Recipe</button>);\n\n    // if there is a user, we want to check if this is their recipe.\n    if (props.user) {\n        if (props.authorId == props.user._id) {\n            // if this is their recipe, show buttons to edit and delete recipe.\n            buttons = (\n                <div>\n                    {/* <Link to={`/recipes/${props.recipeId}/edit`}>Edit Recipe</Link> */}\n                    {/* {editButton}    */}\n                    <Route path={`/recipes/${props.recipe._id}/edit`} render={() => <EditRecipe user={props.user} recipe={props.recipe} />} /> \n                    <button onClick={handleDelete}>Delete Recipe</button>\n                </div>\n            );\n        }\n    }\n    \n    return (\n        <div>\n            {buttons}\n        </div>\n    )\n}","//need to pass user in case someone clicks favorite and add recipe id to favorites list\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from \"axios\";\nimport FavoriteButton from \"./FavoriteButton\";\nimport EditDelRecipeBtn from \"./EditDelRecipeBtn\";\n\n\nexport default function ShowRecipe(props) {\n    // Get params from link\n    const { id } = useParams();\n    const [recipe, setRecipe] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [author, setAuthor]= useState('');\n\n    let recipeStyle = {\n        backgroundImage: 'url(' + recipe.image + ')'\n    }\n\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_SERVER_URL}/recipes/${id}`)\n        .then(response => {\n            console.log(\"👹\");\n            setRecipe(response.data);\n// =======\n            if (response.data.message) {\n                setError(response.data.message);\n                console.log(response.data.err);\n            } else {\n                setRecipe(response.data);\n                console.log(\"RECIPE:\", response.data);\n                // get the author'sname\n                axios.get(`${process.env.REACT_APP_SERVER_URL}/authors/${response.data.userId}`)\n                .then(res2 => {\n                    if (res2.data.message) {\n                        setError(res2.data.message);\n                        console.log(\"💥\", res2.data.err);\n                    } else {\n                        console.log(\"res2.data:\", res2.data)\n                        setAuthor(res2.data);\n                    }\n        }).catch(err => {\n            setError(err);\n            console.log(err);\n        });\n            }\n// >>>>>>> master\n        })\n    }, []);\n\n    useEffect(()=>{\n        console.log(\"Request to api for all recipes\")\n    }, [recipe]);\n\n    let ingredientList = !recipe? \"\" : recipe.ingredients.map((ingred, index) => {\n        return (<li className=\"recipe-ing\" key={ingred + index}>{ingred}</li>)\n    })\n\n\n            // {props.user ? <FavoriteButton recipeId={id} user={props.user} /> : <Link to=\"/auth/signup\">Sign up to favorite</Link>}\n\n    let directions = !recipe? \"\" : recipe.directions.map((step, index) => {\n        return (<li className=\"recipe-step\" key={step + index}>{index + 1}. {step}</li>)\n    })\n\n\n    let tagList = !recipe? \"\" : recipe.tags.map((tag, index) => {\n        return (<p className=\"recipe-tag\" key={tag + index}>{tag}</p>)\n    })\n\n    let recipeDetails = !recipe ? <h3 className=\"white-bg\">Loading...</h3> : (\n        <div className=\"content\">\n            <div className=\"recipe\">\n                <div class=\"recipe-img\" style={recipeStyle} alt={recipe.alt}>\n                    <div class=\"recipe-img-text\">\n                        <h3>{recipe.description}</h3>\n                    </div>\n                </div>\n                <div className=\"recipe-tab\">\n                    <h3 className=\"recipe-tab-text\">\n                        <span className=\"fancy\">Author - </span>\n                        <Link className=\"author\" to={`/authors/${author._id}`}>{author.name}</Link>\n                    </h3>\n                </div>\n                <div className=\"recipe-text\">\n                    <h2 className=\"fancy\">{recipe.title}</h2>\n                    <hr />\n                    <h3>Ingredients</h3>\n                    <ul className=\"recipe-ingredients\">\n                        {ingredientList}\n                    </ul>\n                    {props.user ? <FavoriteButton recipeId={recipe._id} user={props.user} /> : <Link to=\"/auth/signup\">Sign up to favorite</Link>}\n                    <EditDelRecipeBtn user={props.user} recipe={recipe} authorId={recipe.userId}/>\n                </div>\n            </div>\n            <div>\n                <div className=\"recipe-steps\">\n                    <h3>Directions</h3>\n                    <hr />\n                    <ul>\n                        {directions}\n                    </ul>\n                </div>\n                <div className=\"recipe-tags\">\n                    <h4>Tags for this recipe</h4>\n                    {tagList}\n                </div>\n            </div>\n        </div>\n    )\n\n    return (\n        <div>\n            {recipeDetails}\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n// PROPS: pass in a recipe object with all the associated values\nexport default function Thumbnail(props) {\n    \n    const [author, setAuthor]= useState('');\n    let [error, setError] = useState(null);\n    const thumbStyle = {\n        backgroundImage: 'url(' + props.recipe.image + ')'\n    }\n\n    useEffect(() => {\n        // get the recipes userID's user\n        if (props.recipe.userId.name){\n            setAuthor(props.recipe.userId);\n        }else {\n            console.log(props.recipe.userId)\n            axios.get(`${process.env.REACT_APP_SERVER_URL}/authors/${props.recipe.userId}`)\n            .then(response => {\n                if (response.data.message) {\n                    setError(response.data.message);\n                    console.log(\"💥\", response.data.err);\n                } else {\n                    setAuthor(response.data);\n                }\n            }).catch(err => {\n                setError(err);\n                console.log(err);\n            });\n        }\n    }, []);\n\n    //just populate user on the back end\n\n    let authorLink = (<Link to={`/authors/${author._id}`}>{author.name}</Link>);\n\n    // todo: click to expand description\n    return (\n        <div className=\"thumbnail\">\n            <h4 className=\"author thumbnail-tab\">\n                {authorLink}\n            </h4>\n            <div className=\"thumbnail-content\">\n                <div className=\"thumbnail-header\">\n                    <div style={thumbStyle} className=\"thumbnail-img\" alt={props.recipe.alt}>\n                    </div>\n                    <div className=\"thumbnail-innertext\">\n                        <h3 className=\"fancy\">\n                            <Link to={`/recipes/${props.recipe._id}`}>{props.recipe.title}</Link>\n                        </h3>\n                    </div>\n                </div>\n                <p>{props.recipe.description}</p>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Link, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ShowRecipe from \"./ShowRecipe\";\nimport Thumbnail from \"../../components/Thumbnail\";\n\n\nexport default function Recipes(props) {\n    // make 'recipes' state\n    const [topTwenty, setTopTwenty] = useState([]);\n    const [error, setError] = useState(null);\n    console.log(\"SEARCHED REC\", props)\n\n    // call to db to get all recipes\n    useEffect(() => { \n        axios.get(`${process.env.REACT_APP_SERVER_URL}/recipes`)\n        .then(response => {\n            if (response.data.message) {\n                setError(response.data.message);\n                console.log(response.data.err);\n            } else {\n                setTopTwenty(response.data);\n            }\n        }).catch(err => {\n            setError(err.message);\n            console.log(err)\n        });\n    }, []);\n\n   \n    // need to pass user and update user to hold recipeId\n    let searchedRecipesLinkList = !props.searchedRecipes ?\n    <h3>Nothing came up. Try another search?</h3> :\n    props.searchedRecipes.map((searchedRecipe, j) => (\n        <div key={`recipeListItem-${j}`}>\n            <Thumbnail recipe={searchedRecipe} />\n        </div>\n    ));\n\n    let topTwentyLinkList = topTwenty.length < 1 ?\n    <h3>Loading delicious...</h3> :\n    topTwenty.map((topTwenty, i) => (\n        <div key={`recipeListItem-${i}`}>\n            <Thumbnail recipe={topTwenty} />\n        </div>\n    ));\n\n    let outputList = props.searchedRecipes ? searchedRecipesLinkList : topTwentyLinkList;\n\n    return (\n        <div>\n          <div className=\"content\">\n            {outputList}\n          </div>\n        </div>\n      )\n\n};\n","import React, {useState, useEffect} from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function EditProfile(props) {\n    // Declare and initialize state variables\n    let [name, setName] = useState(props.user.name)\n    let [email, setEmail] = useState(props.user.email)\n    let [password, setPassword] = useState(props.user.password)\n    let [image, setImage] = useState(props.user.image)\n    let [bio, setBio] = useState(props.user.bio);\n    let [message, setMessage] = useState('')\n    \n    \n    useEffect(()=> {\n        setMessage(\"\");\n    }, [name, email, password, image, bio])\n    \n    // redirect users who aren't logged in\n    if (!props.user) {\n        return <Redirect to='/' />\n    }\n    \n    const handleSubmit = e => {\n        console.log(\"🦕 here be your changes:\", name, email, password, image, bio)\n        console.log(\"heres what you had before:\", props.user.email, props.user.name, props.user.image, props.user.bio)\n        e.preventDefault()\n        // TODO: Send the user's edited data to the server\n        fetch(`${process.env.REACT_APP_SERVER_URL}/profile/edit/${props.user_id}`, {\n            method: 'POST',\n            body: JSON.stringify({\n                name,\n                email,\n                password,\n                image,\n                bio\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n            }).then(response => {\n            if (!response.ok) {\n                console.log(response);\n                setMessage(`${response.status}: ${response.statusText}`);\n                return;\n            }\n            //if user signded up successfully\n            response.json().then(result => {\n                props.updateUser(result.token);\n            })\n        })\n    }\n\n\n    return (\n        <div className=\"form-background\">\n            <h2 className=\"form-title\">Edit Profile</h2>\n            <span className=\"red\">{message}</span>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Name:</label>\n                    <input type=\"text\" name=\"name\" placeholder={props.user.name} \n                        onChange={e => setName(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Email:</label>\n                    <input type=\"email\" name=\"email\" placeholder={props.user.email} \n                        onChange={e => setEmail(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input type=\"password\" name=\"password\" placeholder={props.user.password} \n                        onChange={e => setPassword(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Profile Pic URL:</label>\n                    <input type=\"url\" name=\"image\" placeholder={props.user.image} \n                        onChange={e => setImage(e.target.value)} \n                    />\n                </div>\n                <div>\n                    <label>Bio:</label>\n                    <input type=\"text\" name=\"bio\" placeholder={props.user.bio} \n                        onChange={e => setBio(e.target.value)} \n                    />\n                </div>\n                <button className=\"form-button\" type=\"submit\">Update</button>\n            </form>\n      </div>\n    )\n}","import React from 'react';\n\n// PROPS: pass in a name, bio, and image\nexport default function Bio(props) {\n    const bioStyle = {\n        backgroundImage: 'url(' + (props.image? props.image: \"./img/profile-placeholder.jpg\")  + ')'\n    }\n    return (\n         <div className=\"bio\">\n            <div style={bioStyle} className=\"bio-img\">\n            </div>\n            <div className=\"bio-text\">\n                <h2 className=\"fancy\">{props.name? props.name: \"\"}</h2>\n                <p>{props.bio ? props.bio : \"This user has no bio.\"}</p>\n            </div>\n         </div>   \n    )\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport Thumbnail from '../../components/Thumbnail';\nimport Bio from '../../components/Bio';\nimport axios from 'axios';\n\n\nexport default function Profile(props) {\n    let [userRecipes, setUserRecipes] = useState([]); \n    let [userFaves, setUserFaves] = useState([]);\n    let [error, setError] = useState(null);\n\n    useEffect(() => {\n        if (props.user) {\n            axios.get(`${process.env.REACT_APP_SERVER_URL}/authors/${props.user._id}`)\n            .then(response => {\n                if (response.data.message) {\n                    setError(response.data.message);\n                    console.log(\"💥\", response.data.err);\n                } else {\n                    console.log(\"response.data:\", response.data)\n                    setUserRecipes(response.data.userRecipes);\n                    setUserFaves(response.data.favRecipes);\n                }\n            }).catch(err => {\n                setError(err);\n                console.log(err);\n            });\n        }\n    }, []);\n\n    if (!props.user) {\n        return <Redirect to='/' />\n    }\n\n\n\n    let recipeLinkList = (userRecipes && userRecipes.length > 0) ? \n        userRecipes.map(recipe => <Thumbnail recipe={recipe} isAuthor={true} />):\n        (<p className=\"dark-bg\">You haven't posted any recipes yet</p>);\n\n    // if (userRecipes && userRecipes.length > 0) {\n    //     console.log(\"USERRECIPES\", userRecipes)\n    //     recipeLinkList = userRecipes.map(recipe => {\n    //         return (\n    //             <Thumbnail recipe={recipe} isAuthor={true} />\n    //         )  \n    //     });\n    // }  \n\n    let favesLinkList = (<p className=\"dark-bg\">No Favorites to show</p>);\n    if (userFaves && userFaves.length > 0) {\n        favesLinkList = userFaves.map(recipe => {\n            console.log(recipe)\n            return (\n                <Thumbnail recipe={recipe} />\n            )  \n        });\n    }\n\n    return (\n        <div className=\"content\">\n            <div>\n                <Bio name={props.user? props.user.name: \"\"} \n                    bio={props.user? props.user.bio: \"\"} \n                    image={props.user? props.user.image: \"\"} />\n                <Link to=\"/profile/edit\" className=\"App-link white-bg\">Edit Profile</Link>\n            </div>\n            <div> \n                <h3 className=\"white-bg\">My Favorites</h3>\n                {favesLinkList}\n            </div>\n            <div>\n                <h3 className=\"white-bg\">My Recipes</h3>\n                <Link to=\"/recipes/new\" className=\"white-bg\">Add a recipe</Link>\n                {recipeLinkList}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n// PROPS: send name, image, id, and numRecipes\nexport default function AuthorThumbnail(props) {\n    let authorLink = `/authors/${props.id}`;\n     //let image url = props.\n     const authorStyle = {\n        backgroundImage: 'url(' + (props.image? props.image: \"./img/profile-placeholder.jpg\") + ')'\n    }\n\n    // redirect to profile if the author matches to user\n    if (props.user && props.id == props.user._id) {\n        authorLink = '/profile';\n    }\n    \n    return (\n        <div className=\"auth-thumb\" key={props.key}>\n            <div style={authorStyle} className=\"auth-thumb-img\" alt={props.name + \"'s profile\"}>\n            </div>\n            <div className=\"auth-thumb-text\">\n                <h3 className=\"author\"><Link to={authorLink}>{props.name}</Link></h3>\n                <p>{props.numRecipes} Recipe{(props.numRecipes === 1)?\"\":\"s\"} </p>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AuthorThumbnail from './AuthorThumbnail';\n\nexport default function Authors(props) {\n    const [authors, setAuthors] = useState([]);\n    const [error, setError] = useState(null);\n\n    // call backend to get authors\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_SERVER_URL}/authors`)\n        .then(response => {\n            if (response.data.message) {\n                setError(response.data.message);\n                console.log(response.data.err);\n            } else {\n                setAuthors(response.data.filter(author => {\n                    return author.userRecipes.length > 0;\n                }));\n            }\n        }).catch(err => {\n            setError(err);\n            console.log(err);\n        });\n    }, []);\n\n    let key = 0;\n\n    let authorLinkList = authors.map(author => {\n        key++;\n        return <AuthorThumbnail name={author.name} \n                image={author.image} \n                numRecipes={author.userRecipes.length}\n                id={author._id}\n                user={props.user}\n                key={key}\n            />\n    });\n\n    return (\n        <div>\n            <h2 className=\"white-bg fancy\">Authors</h2>\n            <div className=\"content\">\n                {authorLinkList}\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport Thumbnail from '../../components/Thumbnail';\nimport Bio from '../../components/Bio';\n\n//PROPS: pass in author object and array of recipe objects as recipes\nexport default function ShowAuthor(props) {\n    let [author, setAuthor] = useState('');\n    let [authorRecipes, setAuthorRecipes] = useState([]); \n    let [error, setError] = useState(null);\n\n    const { id } = useParams();\n    useEffect(() => {\n        axios.get(`${process.env.REACT_APP_SERVER_URL}/authors/${id}`)\n        .then(response => {\n            if (response.data.message) {\n                setError(response.data.message);\n                console.log(\"💥\", response.data.err);\n            } else {\n                // console.log(\"response.data:\", response.data)\n                setAuthor(response.data);\n                setAuthorRecipes(response.data.userRecipes);\n            }\n        }).catch(err => {\n            setError(err);\n            console.log(err);\n        });\n    }, []);\n\n    let recipeLinkList = authorRecipes.map(recipe => {\n        return (\n            <Thumbnail recipe={recipe} />\n        )  \n    });\n\n    return (\n        <div className=\"content\">\n            <div>\n                <Bio name={author.name} bio={author.bio} image={author.image} />\n            </div>\n            <div> \n                {recipeLinkList}\n            </div>\n        </div>\n    )\n}","// Packages\nimport React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Login(props) {\n  // Declare and initialize state variables\n  let [email, setEmail] = useState('')\n  let [message, setMessage] = useState('')\n  let [password, setPassword] = useState('')\n\n  useEffect(() => {\n    setMessage('')\n  }, [email, password]);\n\n  // Event handlers\n  const handleSubmit = e => {\n    e.preventDefault();\n    // make a fetch request to the get rout of the server to check for authentication\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/login`, {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n      // setMessage to error if not authenticated\n      if (!response.ok) {\n        setMessage(`${response.status}: ${response.statusText}`);\n        return;\n      }\n      // if authenticated, updateUser + redirect to profile\n      response.json().then(result => {\n        props.updateUser(result.token);\n      })\n    }).catch(err => {\n      console.log(err);\n      setMessage(`${err.toString()}`);\n    })\n  }\n  \n  if (props.user) {\n    return <Redirect to='/profile' />\n  }\n\n  return (\n    <div className=\"form-background\">\n      <h2 className=\"form-title\">Login</h2>\n      <span className=\"red\">{message}</span>\n      <form onSubmit={handleSubmit}>\n          <div>\n            <label>Email:</label>\n            <input type=\"email\" name=\"email\" onChange={e => setEmail(e.target.value)} />\n          </div>\n          <div>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\n          </div>\n          <button className=\"form-button\" type=\"submit\">Sign in!</button>\n        </form>\n    </div>\n  )\n}\n\n","// Packages\nimport React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Signup(props) {\n  // Declare and initialize state variables\n  let [message, setMessage] = useState('')\n  let [email, setEmail] = useState('')\n  let [name, setName] = useState('')\n  let [password, setPassword] = useState('')\n  let [image, setImage] = useState('')\n  let [bio, setBio] = useState('');\n\n\n  useEffect(()=> {\n    setMessage(\"\");\n  }, [name, email, password, image, bio])\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    // TODO: Send the user sign up data to the server\n    fetch(`${process.env.REACT_APP_SERVER_URL}/auth/signup`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        image,\n        bio\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        console.log(response);\n        setMessage(`${response.status}: ${response.statusText}`);\n        return;\n      }\n      //if user signded up successfully\n      response.json().then(result => {\n        props.updateUser(result.token);\n      })\n    })\n  }\n\n  if (props.user) {\n    return <Redirect to=\"/profile\" />\n  }\n\n  return (\n    <div className=\"form-background\">\n      <h2 className=\"form-title\">Signup</h2>\n      <span className=\"red\">{message}</span>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Name:</label>\n          <input type=\"text\" name=\"name\" onChange={e => setName(e.target.value)} />\n        </div>\n        <div>\n          <label>Email:</label>\n          <input type=\"email\" name=\"email\" onChange={e => setEmail(e.target.value)} />\n        </div>\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\n        </div>\n        <div>\n          <label>Profile Pic URL:</label>\n          <input type=\"url\" name=\"image\" onChange={e => setImage(e.target.value)} />\n        </div>\n        <div>\n          <label>Bio:</label>\n          <input type=\"text\" name=\"bio\" placeholder=\"Say something about yourself\" onChange={e => setBio(e.target.value)} />\n        </div>\n        <button className=\"form-button\" type=\"submit\">Sign Me Up!</button>\n      </form>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport NewRecipe from './pages/recipes/NewRecipe';\nimport EditRecipe from './pages/recipes/EditRecipe.js';\nimport ShowRecipe from './pages/recipes/ShowRecipe';\nimport Recipes from './pages/recipes/Recipes';\nimport EditProfile from './pages/profile/EditProfile';\nimport Profile from './pages/profile/Profile';\nimport Authors from './pages/authors/Authors';\nimport ShowAuthor from './pages/authors/ShowAuthor';\nimport Login from './pages/auth/Login';\nimport Signup from './pages/auth/Signup';\n\nexport default function Content(props) {\n    console.log(\"SEARCHED REC\", props.searchedRecipes)\n    return (\n        <div className=\"container\">\n            <Switch>\n                <Route exact path=\"/\" component={Recipes} />\n                <Route path=\"/recipes/new\" render={() => <NewRecipe user={props.user} />} />\n                {/* <Route path=\"/recipes/:id/edit\" component={EditRecipe} /> */}\n                <Route path=\"/recipes/:id\" render={() => <ShowRecipe user={props.user} />} />\n                <Route path=\"/recipes\" render={() => <Recipes searchedRecipes={props.searchedRecipes} />} />\n                <Route path=\"/profile/edit\" render={() => <EditProfile user={props.user} />} />\n                <Route path=\"/profile\" render={() => <Profile user={props.user} />} />\n                <Route path=\"/authors/:id\" component={ShowAuthor} />\n                <Route path=\"/authors\" render={() => <Authors user={props.user} />} />\n                <Route path=\"/auth/login\" render={() => <Login user={props.user} updateUser={props.updateUser} /> } />\n                <Route path=\"/auth/signup\" render={() => <Signup user={props.user} updateUser={props.updateUser} /> } />\n            </Switch>\n        </div>\n    )\n\n}","import React from 'react';\n\nexport default function Footer(props) {\n    return (\n        <footer>\n            <p>© Mac, John, and Erik 2020</p>\n        </footer>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport jwtDecode from 'jwt-decode';\nimport Header from './wrappers/Header';\nimport Content from './content/Content';\nimport Footer from './wrappers/Footer';\n\nconst App = function() {\n  let [user, setUser] = useState(null);\n  let [searchedRecipes, setSearchedRecipes] = useState([]);\n  console.log(\"SEARCHED REC\", searchedRecipes)\n\n  useEffect(()=> {\n    decodeToken();\n  }, []);\n\n  const updateUser = newToken => {\n    if (newToken) {\n      localStorage.setItem('mernToken', newToken);\n      decodeToken(newToken);\n    } else {\n      setUser(null);\n    }\n  }\n\n  const decodeToken = existingToken => {\n    let token = existingToken || localStorage.getItem('mernToken');\n    if (token) {\n      let decoded = jwtDecode(token);\n      if (!decoded || Date.now() >= decoded.exp * 1000) {\n        console.log(\"Token expired!\");\n        setUser(null);\n      } else {\n        setUser(decoded);\n      }\n    } else {\n      setUser(null);\n    }\n  }\n  \n  return (\n    <Router>\n      <div className=\"App\">\n        <Header searchedRecipes={searchedRecipes} setSearchedRecipes={setSearchedRecipes} updateUser={updateUser} user={user} />\n        <main>\n          <Content searchedRecipes={searchedRecipes} updateUser={updateUser} user={user} />\n        </main>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}